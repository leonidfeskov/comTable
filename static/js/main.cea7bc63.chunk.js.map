{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","components/ComparisonTable/PropertyRate.js","components/ButtonIcon/index.js","reducers/loading.js","reducers/comparisonTable.js","components/ComparisonTable/index.js","components/Progress/index.js","reducers/summary.js","components/Summary/index.js","modules/calculate.js","components/Loading/index.js","components/App/index.js","reducers/index.js","index.js"],"names":["Header","className","Container","maxWidth","Footer","PropertySlider","withStyles","root","position","zIndex","left","right","bottom","padding","rail","backgroundColor","Slider","PropertyRate","value","onChange","color","aria-labelledby","valueLabelDisplay","step","min","max","ButtonIcon","kind","text","size","onClick","classnames","loading","state","action","type","isLoading","stateFromStorage","generateId","String","Date","getTime","INITIAL_STATE","variants","id","name","properties","rate","values","localStorage","getItem","JSON","parse","error","console","comparisonTable","payload","map","row","propertyIndex","variantIndex","property","propertyId","variant","variantId","findIndex","filter","index","ComparisonTable","dispatch","useDispatch","useSelector","queryString","window","location","search","tableId","URLSearchParams","get","useEffect","setItem","stringify","lastPropertyOrVariantName","useRef","handleChangeValue","target","currentTarget","Number","dataset","handleChangePropertyName","current","handleFocusCell","element","range","document","createRange","textNode","childNodes","selectNode","getSelection","removeAllRanges","addRange","selectText","innerText","handleBlurPropertyName","handleBlurVariantName","key","data-variant-id","html","onFocus","onBlur","confirm","removeVariant","data-property-id","event","find","setPropertyRate","data-property-index","data-variant-index","removeProperty","length","Progress","isWorst","isBest","style","width","summary","useStyles","makeStyles","listItem","display","Summary","bestValue","worstValue","forEach","comparisonData","propertiesRateSum","reduce","sum","normalizedPropertyRates","normalizedValues","result","propertyRate","calculateSummary","setSummaryAction","toFixed","Loading","CircularProgress","App","Grid","container","spacing","item","xs","sm","md","lg","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","theme","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.cea7bc63.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './Header.scss';\n\nexport default function Header() {\n    return (\n        <div className=\"header\">\n            <Container maxWidth=\"lg\">\n                <div className=\"header-logo\" />\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './Footer.scss';\n\nexport default function Footer() {\n    return (\n        <div className=\"footer\">\n            <Container maxWidth=\"lg\">\n                Copyright © Leonid Feskov 2020.\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst PropertySlider = withStyles({\n    root: {\n        position: 'absolute',\n        zIndex: 1,\n        left: 0,\n        right: 0,\n        bottom: -1,\n        padding: 0,\n    },\n    rail: {\n        backgroundColor: 'transparent',\n    }\n})(Slider);\n\nexport default function PropertyRate({ value, onChange }) {\n    return (\n        <PropertySlider\n            value={value}\n            onChange={onChange}\n            color=\"secondary\"\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={0}\n            max={10}\n        />\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './ButtonIcon.scss';\n\nexport default function ButtonIcon({ kind, text, size, onClick }) {\n    return (\n        <button\n            className={classnames(`button-icon button-icon_${kind}`, {\n                [`button-icon_${size}`]: size,\n            })}\n            onClick={onClick}\n        >\n            {text}\n        </button>\n    );\n}\n","const SET_LOADING = 'SET_LOADING';\n\nexport const setLoading = (isLoading) => ({\n    type: SET_LOADING,\n    isLoading,\n});\n\nconst loading = (state = true, action) => {\n    switch (action.type) {\n        case SET_LOADING:\n            return action.isLoading;\n        default:\n            return state\n    }\n};\n\nexport default loading\n","const DEFAULT_RATE = 5;\nconst DEFAULT_VALUE = 1;\nconst DEFAULT_PROPERTY_NAME = 'Новый признак';\nconst DEFAULT_VARIANT_NAME = 'Новый вариант';\n\nconst COMPARISON_TABLE_SET_ALL = 'COMPARISON_TABLE_SET_ALL';\nconst COMPARISON_TABLE_SET_PROPERTY_VALUE = 'COMPARISON_TABLE_SET_PROPERTY_VALUE';\nconst COMPARISON_TABLE_SET_PROPERTY_NAME = 'COMPARISON_TABLE_SET_PROPERTY_NAME';\nconst COMPARISON_TABLE_SET_PROPERTY_RATE = 'COMPARISON_TABLE_SET_PROPERTY_RATE';\nconst COMPARISON_TABLE_SET_VARIANT_NAME = 'COMPARISON_TABLE_SET_VARIANT_NAME';\nconst COMPARISON_TABLE_ADD_PROPERTY = 'COMPARISON_TABLE_ADD_PROPERTY';\nconst COMPARISON_TABLE_REMOVE_PROPERTY = 'COMPARISON_TABLE_REMOVE_PROPERTY';\nconst COMPARISON_TABLE_ADD_VARIANT = 'COMPARISON_TABLE_ADD_VARIANT';\nconst COMPARISON_TABLE_REMOVE_VARIANT = 'COMPARISON_TABLE_REMOVE_VARIANT';\n\nconst generateId = () => String(new Date().getTime());\n\nexport const INITIAL_STATE = {\n    variants: [\n        {\n            id: '1',\n            name: 'React',\n        },\n        {\n            id: '2',\n            name: 'Angular',\n        },\n        {\n            id: '3',\n            name: 'Vue',\n        },\n    ],\n    properties: [\n        {\n            id: '1',\n            name: 'Количество вакансий',\n            rate: DEFAULT_RATE,\n        },\n        {\n            id: '2',\n            name: 'Количество резюме',\n            rate: DEFAULT_RATE,\n        },\n        {\n            id: '3',\n            name: 'Зарплата',\n            rate: DEFAULT_RATE,\n        },\n    ],\n    values: [\n        [159, 120, 100],\n        [34, 23, 20],\n        [100000, 90000, 120000],\n    ],\n};\n\nexport const setComparisonTable = (payload) => ({\n    type: COMPARISON_TABLE_SET_ALL,\n    payload,\n});\n\nexport const setPropertyValue = (propertyIndex, variantIndex, value) => ({\n    type: COMPARISON_TABLE_SET_PROPERTY_VALUE,\n    propertyIndex,\n    variantIndex,\n    value,\n});\n\nexport const setPropertyName = (propertyId, name) => ({\n    type: COMPARISON_TABLE_SET_PROPERTY_NAME,\n    propertyId,\n    name,\n});\n\nexport const setPropertyRate = (propertyId, rate) => ({\n    type: COMPARISON_TABLE_SET_PROPERTY_RATE,\n    propertyId,\n    rate,\n});\n\nexport const setVariantName = (variantId, name) => ({\n    type: COMPARISON_TABLE_SET_VARIANT_NAME,\n    variantId,\n    name,\n});\n\nexport const addProperty = () => ({\n    type: COMPARISON_TABLE_ADD_PROPERTY,\n});\n\nexport const removeProperty = (propertyId) => ({\n    type: COMPARISON_TABLE_REMOVE_PROPERTY,\n    propertyId,\n});\n\nexport const addVariant = () => ({\n    type: COMPARISON_TABLE_ADD_VARIANT,\n});\n\nexport const removeVariant = (variantId) => ({\n    type: COMPARISON_TABLE_REMOVE_VARIANT,\n    variantId,\n});\n\nlet stateFromStorage;\nif (localStorage.getItem('comparisonTable')) {\n    try {\n        stateFromStorage = JSON.parse(localStorage.getItem('comparisonTable'))\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nconst comparisonTable = (state = stateFromStorage || INITIAL_STATE, action) => {\n    switch (action.type) {\n        case COMPARISON_TABLE_SET_ALL:\n            return action.payload;\n        case COMPARISON_TABLE_SET_PROPERTY_VALUE:\n            return {\n                ...state,\n                values: state.values.map((row, propertyIndex) => {\n                    if (propertyIndex === action.propertyIndex) {\n                        return row.map((value, variantIndex) => {\n                            if (variantIndex === action.variantIndex) {\n                                return action.value;\n                            }\n                            return value\n                        })\n                    }\n                    return row;\n                }),\n            };\n        case COMPARISON_TABLE_SET_PROPERTY_NAME:\n            return {\n                ...state,\n                properties: state.properties.map((property) => {\n                    if (property.id ===action.propertyId) {\n                        return {\n                            ...property,\n                            name: action.name,\n                        }\n                    }\n                    return property;\n                })\n            };\n        case COMPARISON_TABLE_SET_PROPERTY_RATE:\n            return {\n                ...state,\n                properties: state.properties.map((property) => {\n                    if (property.id ===action.propertyId) {\n                        return {\n                            ...property,\n                            rate: action.rate,\n                        }\n                    }\n                    return property;\n                })\n            };\n        case COMPARISON_TABLE_SET_VARIANT_NAME:\n            return {\n                ...state,\n                variants: state.variants.map((variant) => {\n                    if (variant.id ===action.variantId) {\n                        return {\n                            ...variant,\n                            name: action.name,\n                        }\n                    }\n                    return variant;\n                })\n            };\n        case COMPARISON_TABLE_ADD_PROPERTY:\n            return {\n                ...state,\n                properties: [\n                    ...state.properties,\n                    {\n                        id: generateId(),\n                        name: DEFAULT_PROPERTY_NAME,\n                        rate: DEFAULT_RATE,\n                    }\n                ],\n                values: [\n                    ...state.values,\n                    state.variants.map(() => DEFAULT_VALUE),\n                ]\n            };\n        case COMPARISON_TABLE_REMOVE_PROPERTY:\n            const propertyIndex = state.properties.findIndex((property) => property.id === action.propertyId);\n            return {\n                ...state,\n                properties: state.properties.filter((property) => property.id !== action.propertyId),\n                values: state.values.filter((row, index) => index !== propertyIndex),\n            };\n        case COMPARISON_TABLE_ADD_VARIANT:\n            return {\n                ...state,\n                variants: [\n                    ...state.variants,\n                    {\n                        id: generateId(),\n                        name: DEFAULT_VARIANT_NAME,\n                    }\n                ],\n                values: state.values.map((row) => {\n                    return [...row, DEFAULT_VALUE]\n                }),\n            };\n        case COMPARISON_TABLE_REMOVE_VARIANT:\n            const variantIndex = state.variants.findIndex((variant) => variant.id === action.variantId);\n            return {\n                ...state,\n                variants: state.variants.filter((variant) => variant.id !== action.variantId),\n                values: state.values.map((row) => row.filter((value, index) => index !== variantIndex)),\n            };\n        default:\n            return state\n    }\n};\n\nexport default comparisonTable\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport ContentEditable from 'react-contenteditable'\n\nimport PropertyRate from './PropertyRate';\nimport ButtonIcon from '../ButtonIcon';\nimport ButtonSave from './ButtonSave';\nimport {\n    setPropertyValue,\n    setPropertyName,\n    setVariantName,\n    addProperty,\n    removeProperty,\n    addVariant,\n    removeVariant,\n    setPropertyRate,\n    setComparisonTable\n} from '../../reducers/comparisonTable';\nimport { setLoading } from '../../reducers/loading';\n// import firebaseAPI from '../../modules/firebase';\n\nimport './ComparisonTable.scss';\n\nconst selectText = (element) => {\n    const range = document.createRange();\n    const textNode = element.childNodes[0];\n    if (textNode) {\n        range.selectNode(textNode);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n    }\n};\n\nexport default function ComparisonTable() {\n    const dispatch = useDispatch();\n    const comparisonTable = useSelector(({ comparisonTable }) => comparisonTable);\n    const { variants, properties, values } = comparisonTable;\n\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const tableId = urlParams.get('id');\n\n    useEffect(() => {\n        if (tableId) {\n            // firebaseAPI.get(\n            //     `comparisonTable/${tableId}`,\n            //     (response) => {\n            //         dispatch(setComparisonTable(response));\n            //         dispatch(setLoading(false));\n            //     },\n            //     (error) => {\n            //         console.error(error);\n            //         dispatch(setLoading(false));\n            //     }\n            // );\n        } else {\n            dispatch(setLoading(false));\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!tableId) {\n            localStorage.setItem('comparisonTable', JSON.stringify(comparisonTable));\n        }\n    }, [comparisonTable]);\n\n    const lastPropertyOrVariantName = useRef('');\n\n    const handleChangeValue = ({ target, currentTarget }) => {\n        dispatch(setPropertyValue(\n            Number(currentTarget.dataset.propertyIndex),\n            Number(currentTarget.dataset.variantIndex),\n            Number(target.value) || 0)\n        )\n    };\n\n    const handleChangePropertyName = ({ target }) => {\n        lastPropertyOrVariantName.current = target.value;\n    };\n\n    const handleFocusCell = ({ target }) => {\n        selectText(target);\n        lastPropertyOrVariantName.current = target.innerText;\n    };\n\n    const handleBlurPropertyName = ({ target }) => {\n        dispatch(setPropertyName(target.dataset.propertyId, lastPropertyOrVariantName.current));\n    };\n\n    const handleBlurVariantName = ({ target }) => {\n        dispatch(setVariantName(target.dataset.variantId, lastPropertyOrVariantName.current));\n    };\n\n    const handleChangePropertyRate = (propertyId, rate) => {\n        const property = properties.find((property) => property.id === propertyId);\n        if (property.rate !== rate) {\n            dispatch(setPropertyRate(propertyId, rate))\n        }\n    };\n\n    const removeVariantHandler = (variantId) => {\n        const isConfirmed = window.confirm('Действительно хотите удалить вариант?');\n        if (isConfirmed) {\n            dispatch(removeVariant(variantId));\n        }\n\n    };\n\n    const removePropertyHandler = (propertyId) => {\n        const isConfirmed = window.confirm('Действительно хотите удалить признак?');\n        if (isConfirmed) {\n            dispatch(removeProperty(propertyId));\n        }\n    };\n\n    return (\n        <div className=\"comparison-table-container\">\n            <div className=\"comparison-table\">\n                <div className=\"comparison-table__row comparison-table__row_head\">\n                    <div className=\"comparison-table__cell comparison-table__cell_spacer\">\n                        {/*<div className=\"comparison-table-save\">*/}\n                        {/*    <ButtonSave />*/}\n                        {/*</div>*/}\n                    </div>\n                    <div className=\"comparison-table__value\">\n                    {variants.map((variant) => (\n                        <div className=\"comparison-table__cell comparison-table__cell_head\" key={variant.id}>\n                            <ContentEditable\n                                className=\"comparison-table__cell-editable\"\n                                data-variant-id={variant.id}\n                                html={variant.name}\n                                onChange={handleChangePropertyName}\n                                onFocus={handleFocusCell}\n                                onBlur={handleBlurVariantName}\n                            />\n                            <div className=\"comparison-table-remove-variant\">\n                                <ButtonIcon kind=\"remove\" onClick={() => removeVariantHandler(variant.id)} />\n                            </div>\n                        </div>\n                    ))}\n                    </div>\n                </div>\n                {properties.map((property, propertyIndex) => (\n                    <div\n                        className={classnames('comparison-table__row', {\n                            'comparison-table__row_disabled': !property.rate,\n                        })}\n                        key={property.id}\n                    >\n                        <div className=\"comparison-table__cell comparison-table__cell_property\">\n                            <ContentEditable\n                                className=\"comparison-table__cell-editable\"\n                                data-property-id={property.id}\n                                html={property.name}\n                                onChange={handleChangePropertyName}\n                                onFocus={handleFocusCell}\n                                onBlur={handleBlurPropertyName}\n                            />\n                            <PropertyRate\n                                value={property.rate}\n                                onChange={(event, value) => handleChangePropertyRate(property.id, value)}\n                            />\n                        </div>\n                        <div className=\"comparison-table__value\">\n                            {values[propertyIndex] && values[propertyIndex].map((value, variantIndex) => {\n                                return (\n                                    <div className=\"comparison-table__cell\" key={variants[variantIndex].id}>\n                                        <ContentEditable\n                                            className=\"comparison-table__cell-editable\"\n                                            data-property-index={propertyIndex}\n                                            data-variant-index={variantIndex}\n                                            html={String(value)}\n                                            onChange={handleChangeValue}\n                                            onFocus={handleFocusCell}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div className=\"comparison-table-remove-property\">\n                            <ButtonIcon kind=\"remove\" onClick={() => removePropertyHandler(property.id)} />\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"comparison-table-actions\">\n                <div className=\"comparison-table-actions__add-row\">\n                    <ButtonIcon kind=\"add-row\" size=\"large\" onClick={() => dispatch(addProperty())} />\n                </div>\n                {variants.length < 4 && (\n                    <div className=\"comparison-table-actions__add-column\">\n                        <ButtonIcon kind=\"add-column\" size=\"large\" onClick={() => dispatch(addVariant())} />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Progress.scss';\n\nexport default function Progress({ value, isWorst, isBest }) {\n    return (\n        <div className=\"progress\">\n            <div\n                className={classnames('progress__bar', {\n                    'progress__bar_worst': isWorst,\n                    'progress__bar_best': isBest,\n                })}\n                style={{width: `${value * 100}%`}}\n            />\n        </div>\n    );\n}\n","const SET_SUMMARY = 'SET_SUMMARY';\n\nexport const setSummaryAction = (summary) => ({\n    type: SET_SUMMARY,\n    summary,\n});\n\nconst summary = (state = [], action) => {\n    switch (action.type) {\n        case SET_SUMMARY:\n            return action.summary;\n        default:\n            return state\n    }\n};\n\nexport default summary\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Progress from '../Progress';\nimport { setSummaryAction } from '../../reducers/summary';\nimport { calculateSummary } from '../../modules/calculate';\n\nimport './Summary.scss';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        padding: 0,\n    },\n    listItem: {\n        display: 'block',\n    },\n}));\n\nexport default function Summary() {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const { summary, comparisonTable } = useSelector((state) => state);\n\n    let bestValue = 0;\n    let worstValue = 1;\n    summary.forEach((variant) => {\n        if (variant.value > bestValue) {\n            bestValue = variant.value;\n        }\n        if (variant.value < worstValue) {\n            worstValue = variant.value;\n        }\n    });\n\n    useEffect(() => {\n        const summary = calculateSummary(comparisonTable);\n        dispatch(setSummaryAction(summary));\n    }, [comparisonTable]);\n\n    return (\n        <div className=\"summary-list\">\n            {summary.map((variant) => (\n                <div key={variant.id} className=\"summary-list-item\">\n                    <div className={classnames('summary-text', {\n                        'summary-text_best': variant.value === bestValue,\n                    })}>\n                        <span>\n                            {variant.name}\n                        </span>\n                        <span>\n                            {variant.value.toFixed(3)}\n                        </span>\n                    </div>\n                    <Progress\n                        value={variant.value}\n                        isWorst={variant.value === worstValue}\n                        isBest={variant.value === bestValue}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n}\n","export const calculateSummary = (comparisonData) => {\n    const { variants, properties, values } = comparisonData;\n\n    // нормализуем степень важности признаков, по которым сравниваем\n    const propertiesRateSum = properties.reduce((sum, property) => {\n        return sum + property.rate;\n    }, 0);\n\n    const normalizedPropertyRates = properties.map((property) => property.rate / propertiesRateSum);\n\n    // нормальзиуем значения\n    const normalizedValues = [];\n    values.forEach((row, propertyIndex) => {\n        normalizedValues[propertyIndex] = [];\n        const sum = row.reduce((sum, value) => sum + value, 0);\n        normalizedValues[propertyIndex] = row.map((value) => value / sum);\n    });\n\n    return variants.map((variant, variantIndex) => {\n        return {\n            id: variant.id,\n            name: variant.name,\n            value: normalizedPropertyRates.reduce((result, propertyRate, propertyIndex) => {\n                const value = normalizedValues[propertyIndex] ? normalizedValues[propertyIndex][variantIndex] : 0;\n                return result + propertyRate * value;\n            }, 0),\n        }\n    });\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loading.scss';\n\nexport default function Loading() {\n    return (\n        <div className=\"loading\">\n            <CircularProgress color=\"secondary\"/>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport ComparisonTable from '../ComparisonTable';\nimport Summary from '../Summary';\nimport Loading from '../Loading';\n\nimport './App.scss';\n\nfunction App() {\n    const loading = useSelector(({ loading }) => loading);\n    return (\n        <div className=\"container\">\n            <div className=\"main\">\n                <Header />\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <ComparisonTable />\n                        </Grid>\n                        <Grid item xs={12} sm={8} md={4} lg={4}>\n                            <Summary />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n            <Footer />\n            {loading && <Loading />}\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\n\nimport comparisonTable from './comparisonTable';\nimport summary from './summary';\nimport loading from './loading';\n\nexport default combineReducers({\n    comparisonTable,\n    summary,\n    loading,\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nimport './styles/main.scss';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#cfd8dc',\n        },\n        secondary: {\n            main: '#ff9800',\n        },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}